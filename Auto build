local player = game.Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local cashObj = player:WaitForChild("leaderstats"):WaitForChild("Cash")

-- List of all possible base colors
local baseColors = {"Purple", "Orange", "Pink", "Black", "Red", "Green", "Blue", "Yellow"}

-- Function to find your base
local function getMyBase()
local tycoonsFolder = workspace:WaitForChild("Tycoons"):WaitForChild("Tycoons")
for _, color in ipairs(baseColors) do
local base = tycoonsFolder:FindFirstChild(color .. " Base")
if base and base:FindFirstChild("Owner") then
local owner = base.Owner
if tostring(owner.Value) == player.Name or owner.Value == player then
return base
end
end
end
return nil
end

local base = getMyBase()
if not base then
print("❌ No tycoon found for player:", player.Name)
return
else
print("✅ Your Tycoon:", base.Name)
end

local function toNumber(v)
if typeof(v) == "number" then return v end
if typeof(v) == "string" then
local n = v:gsub("%$", ""):gsub(",", ""):gsub("[^%d%.%-]", "")
return tonumber(n) or 0
end
if typeof(v) == "Instance" and v.Value then
return toNumber(v.Value)
end
return 0
end

local function fireTouch(part)
if not (part and hrp) then return end
for _, v in ipairs(part:GetChildren()) do
if v:IsA("TouchTransmitter") then
pcall(firetouchinterest, hrp, part, 0)
task.wait(0.04)
pcall(firetouchinterest, hrp, part, 1)
end
end
end

local function getCashParts()
local t = {}
for _, p in ipairs(base:GetDescendants()) do
if p:IsA("BasePart") and p:FindFirstChildWhichIsA("TouchTransmitter") then
local n = p.Name:lower()
if n:find("cash") or n:find("collect") or n:find("giver") or n:find("partcollector") then
table.insert(t, p)
end
end
end
return t
end

local cashParts = getCashParts()
local function collect()
for _, p in ipairs(cashParts) do
fireTouch(p)
task.wait(0.04)
end
end

local function canBuy(btn, purchases)
local priceObj = btn:FindFirstChild("Price")
local dep = btn:FindFirstChild("Dependency")
local head = btn:FindFirstChild("Head")
if not (priceObj and head) then return false end
if dep and not purchases:FindFirstChild(dep.Value) then return false end
local price = toNumber(priceObj)
local cash = toNumber(cashObj)
return cash >= price
end

-- Ignore Gamepass / DevProduct buttons
local function isGamepassButton(btn)
local name = btn.Name:lower()
if name:find("gamepass") or name:find("vip") or name:find("donate") or name:find("devproduct") then
return true
end
if btn:FindFirstChild("Gamepass") or btn:FindFirstChild("GamepassId") or btn:FindFirstChild("DevProductId") then
return true
end
return false
end

-- Silent buttons like starter dropper
local function isSilentButton(btn)
local name = btn.Name:lower()
if name:find("starter") and name:find("dropper") then
return true
end
return false
end

local function buyAll()
local buttons = base:FindFirstChild("Buttons")
local purchases = base:FindFirstChild("PurchasedObjects")
if not (buttons and purchases) then return end

local list = {}  
for _, b in ipairs(buttons:GetChildren()) do  
	if not isGamepassButton(b) then  
		local price = toNumber(b:FindFirstChild("Price"))  
		table.insert(list, {btn=b, price=price})  
	end  
end  

table.sort(list, function(a,b) return a.price < b.price end)  

for _, d in ipairs(list) do  
	if canBuy(d.btn, purchases) then  
		local head = d.btn:FindFirstChild("Head")  
		if head then  
			if not isSilentButton(d.btn) then  
				print(string.format("🛒 %s | %d", d.btn.Name, d.price))  
			end  
			fireTouch(head)  
			task.wait(0.1)  
		end  
	end  
end

end

print("⚙️ Auto Tycoon running…")
while task.wait(0.25) do
collect()
buyAll()
end
